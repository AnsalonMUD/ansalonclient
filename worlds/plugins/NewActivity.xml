<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE muclient
  [
  <!ENTITY activity_alias "na" > 
  <!ENTITY warn_if_none "vbTrue" >   
  ]>

<!-- Saved on Sunday, October 27, 2002, 10:00 AM -->
<!-- MuClient version 3.29 -->

<!-- Plugin "NewActivity" generated by Plugin Wizard -->

<!--
Customise the entities above if you want:

 activity_alias <-  what alias to match on, default "na"
 warn_if_none   <-  warn if no new activity, change to vbFalse to omit

-->

<muclient>
<plugin
   name="NewActivity"
   author="Nick Gammon"
   id="1c365f77c8f7915e97b2658c"
   language="VBscript"
   purpose="Switches to a world with new activity"
   date_written="2002-10-27 09:58:04"
   requires="3.21"
   version="1.0"
   >
<description trim="y">
Type "&activity_alias;" to switch to the next world with new activity. 

New activity is defined as output that has been received while the world is not the active window.


Usage
-----

&activity_alias;               &lt;-- Switch to world with activity

NewActivity:help &lt;-- This help

</description>

</plugin>


<!--  Aliases  -->

<aliases>
  <alias
   script="OnNewActivity"
   match="&activity_alias;"
   enabled="y"
  >
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[

Sub OnNewActivity (sName, sLine, wildcards)
Dim name, otherworld

'
' Get list of all worlds, check each one
'

  For Each name In world.GetWorldList
    Set otherworld = world.GetWorld (name)
    If Not ((otherworld Is Nothing)) Then

'
'  GetInfo (202) is the count of new lines for a world
'
      If otherworld.GetInfo (202) > 0 Then
         otherworld.Activate
         Exit Sub
      End If  '  end of a world with new activity

    End If  ' end of good world object, and not ourselves
  Next  ' end of looping through all open worlds

]]>

'
' Optional message to warn you there were none ...
'
  If &warn_if_none; Then
    world.Note "-- No new activity --"
  End If

End Sub

</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="NewActivity:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
Sub OnHelp (sName, sLine, wildcards)
  World.Note World.GetPluginInfo (World.GetPluginID, 3)
End Sub
]]>
</script> 

</muclient>
